ct Bool DEBUG = true

ct UU NTSC_FRAMERATE = $177A
ct UU PAL_FRAMERATE = $1389

// HOW THIS WORKS
// - currently, first poll happens at scanline 246, cycle 70-ish
// - this should only affect the first interval since all others
//   are relative
// - first element is for nmi, a value of n means the irq
//   happens at scanline n-1, cycle 290-ish
// - in general, i'm pretty sure that the number written is like
//   one more than what's actually counted (this will been tested)
// - also, nesfab takes a scanline to actually schedule the next one, so
//   we subtract another 1
// - last one is extra long because we don't want it to actually work
// - Current measurements: 0, 16, 32, 49, 65, 81, 98, 114, 130, 137, 163, 179
// - 196, 212, 228
data /scanline
    [] scanline_intervals
        U(3) // this isn't great but timing is unstable without it so it stays
        U(15)
        U(15)
        U(16)
        U(15)
        U(15)
        U(16)
        U(15)
        U(15)
        U(16)
        U(15)
        U(15)
        U(16)
        U(15)
        U(15)
        U(20)

data /flags
    [] powers_of_two
        U(1)
        U(2)
        U(4)
        U(8)
        U(16)
        U(32)
        U(64)
        U(128)

// how many input display rows
ct U NUM_VISIBLE_ROWS = 6
// height in tiles
ct U ROW_HEIGHT = 3

ct UU FRAME_ROW_ADDR = $2140

ct U NUM_VISIBLE_FRAMES = 30

// number of frames beyond last input until recording stops
ct U COOLDOWN_THRESHOLD = 8

ct U NUM_STAT_MODES = 1

// sprite tile indices
ct U RECORD_SPRITE = $33

ct U[25] START_PALETTE = U[25](
// bg
    $20, $2B, $39,
    $00, $2A, $3B,
    $15, $23, $31,
    $17, $25, $33,
// sprites
    $2A, $14, $26,
    $04, $16, $28,
    $06, $18, $2A,
    $20, $16, $2C,
// shared background color
    $0F)

ct U[] HZ_GRADIENT = U[](
    $10, $26, $27, $28, $29, $2A, $2C, $22, $23, $24, $14, $15, // from gym
    $34, $33, $32, $31, $3A, $39, $38, // continuation beyond gym colors
)

ct U[] HZ_THRESHOLDS = U[](
    $0F, $13, $17, $1F, $27, $4E, $75
)
